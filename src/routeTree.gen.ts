/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuthRequiredRouteImport } from './routes/_auth-required'
import { Route as AuthRequiredIndexRouteImport } from './routes/_auth-required/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthRequiredWorkspaceRouteImport } from './routes/_auth-required/$workspace'
import { Route as AuthRequiredWorkspaceVulnerabilityScannerRouteImport } from './routes/_auth-required/$workspace/vulnerability-scanner'
import { Route as AuthRequiredWorkspaceTrafficAnalyzerRouteImport } from './routes/_auth-required/$workspace/traffic-analyzer'
import { Route as AuthRequiredWorkspaceDashboardRouteImport } from './routes/_auth-required/$workspace/dashboard'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRequiredRoute = AuthRequiredRouteImport.update({
  id: '/_auth-required',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRequiredIndexRoute = AuthRequiredIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRequiredRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthRequiredWorkspaceRoute = AuthRequiredWorkspaceRouteImport.update({
  id: '/$workspace',
  path: '/$workspace',
  getParentRoute: () => AuthRequiredRoute,
} as any)
const AuthRequiredWorkspaceVulnerabilityScannerRoute =
  AuthRequiredWorkspaceVulnerabilityScannerRouteImport.update({
    id: '/vulnerability-scanner',
    path: '/vulnerability-scanner',
    getParentRoute: () => AuthRequiredWorkspaceRoute,
  } as any)
const AuthRequiredWorkspaceTrafficAnalyzerRoute =
  AuthRequiredWorkspaceTrafficAnalyzerRouteImport.update({
    id: '/traffic-analyzer',
    path: '/traffic-analyzer',
    getParentRoute: () => AuthRequiredWorkspaceRoute,
  } as any)
const AuthRequiredWorkspaceDashboardRoute =
  AuthRequiredWorkspaceDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthRequiredWorkspaceRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/$workspace': typeof AuthRequiredWorkspaceRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AuthRequiredIndexRoute
  '/$workspace/dashboard': typeof AuthRequiredWorkspaceDashboardRoute
  '/$workspace/traffic-analyzer': typeof AuthRequiredWorkspaceTrafficAnalyzerRoute
  '/$workspace/vulnerability-scanner': typeof AuthRequiredWorkspaceVulnerabilityScannerRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/$workspace': typeof AuthRequiredWorkspaceRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/': typeof AuthRequiredIndexRoute
  '/$workspace/dashboard': typeof AuthRequiredWorkspaceDashboardRoute
  '/$workspace/traffic-analyzer': typeof AuthRequiredWorkspaceTrafficAnalyzerRoute
  '/$workspace/vulnerability-scanner': typeof AuthRequiredWorkspaceVulnerabilityScannerRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth-required': typeof AuthRequiredRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_auth-required/$workspace': typeof AuthRequiredWorkspaceRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/_auth-required/': typeof AuthRequiredIndexRoute
  '/_auth-required/$workspace/dashboard': typeof AuthRequiredWorkspaceDashboardRoute
  '/_auth-required/$workspace/traffic-analyzer': typeof AuthRequiredWorkspaceTrafficAnalyzerRoute
  '/_auth-required/$workspace/vulnerability-scanner': typeof AuthRequiredWorkspaceVulnerabilityScannerRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/$workspace'
    | '/auth/login'
    | '/'
    | '/$workspace/dashboard'
    | '/$workspace/traffic-analyzer'
    | '/$workspace/vulnerability-scanner'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/$workspace'
    | '/auth/login'
    | '/'
    | '/$workspace/dashboard'
    | '/$workspace/traffic-analyzer'
    | '/$workspace/vulnerability-scanner'
  id:
    | '__root__'
    | '/_auth-required'
    | '/auth'
    | '/_auth-required/$workspace'
    | '/auth/login'
    | '/_auth-required/'
    | '/_auth-required/$workspace/dashboard'
    | '/_auth-required/$workspace/traffic-analyzer'
    | '/_auth-required/$workspace/vulnerability-scanner'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRequiredRoute: typeof AuthRequiredRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth-required': {
      id: '/_auth-required'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRequiredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth-required/': {
      id: '/_auth-required/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthRequiredIndexRouteImport
      parentRoute: typeof AuthRequiredRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth-required/$workspace': {
      id: '/_auth-required/$workspace'
      path: '/$workspace'
      fullPath: '/$workspace'
      preLoaderRoute: typeof AuthRequiredWorkspaceRouteImport
      parentRoute: typeof AuthRequiredRoute
    }
    '/_auth-required/$workspace/vulnerability-scanner': {
      id: '/_auth-required/$workspace/vulnerability-scanner'
      path: '/vulnerability-scanner'
      fullPath: '/$workspace/vulnerability-scanner'
      preLoaderRoute: typeof AuthRequiredWorkspaceVulnerabilityScannerRouteImport
      parentRoute: typeof AuthRequiredWorkspaceRoute
    }
    '/_auth-required/$workspace/traffic-analyzer': {
      id: '/_auth-required/$workspace/traffic-analyzer'
      path: '/traffic-analyzer'
      fullPath: '/$workspace/traffic-analyzer'
      preLoaderRoute: typeof AuthRequiredWorkspaceTrafficAnalyzerRouteImport
      parentRoute: typeof AuthRequiredWorkspaceRoute
    }
    '/_auth-required/$workspace/dashboard': {
      id: '/_auth-required/$workspace/dashboard'
      path: '/dashboard'
      fullPath: '/$workspace/dashboard'
      preLoaderRoute: typeof AuthRequiredWorkspaceDashboardRouteImport
      parentRoute: typeof AuthRequiredWorkspaceRoute
    }
  }
}

interface AuthRequiredWorkspaceRouteChildren {
  AuthRequiredWorkspaceDashboardRoute: typeof AuthRequiredWorkspaceDashboardRoute
  AuthRequiredWorkspaceTrafficAnalyzerRoute: typeof AuthRequiredWorkspaceTrafficAnalyzerRoute
  AuthRequiredWorkspaceVulnerabilityScannerRoute: typeof AuthRequiredWorkspaceVulnerabilityScannerRoute
}

const AuthRequiredWorkspaceRouteChildren: AuthRequiredWorkspaceRouteChildren = {
  AuthRequiredWorkspaceDashboardRoute: AuthRequiredWorkspaceDashboardRoute,
  AuthRequiredWorkspaceTrafficAnalyzerRoute:
    AuthRequiredWorkspaceTrafficAnalyzerRoute,
  AuthRequiredWorkspaceVulnerabilityScannerRoute:
    AuthRequiredWorkspaceVulnerabilityScannerRoute,
}

const AuthRequiredWorkspaceRouteWithChildren =
  AuthRequiredWorkspaceRoute._addFileChildren(
    AuthRequiredWorkspaceRouteChildren,
  )

interface AuthRequiredRouteChildren {
  AuthRequiredWorkspaceRoute: typeof AuthRequiredWorkspaceRouteWithChildren
  AuthRequiredIndexRoute: typeof AuthRequiredIndexRoute
}

const AuthRequiredRouteChildren: AuthRequiredRouteChildren = {
  AuthRequiredWorkspaceRoute: AuthRequiredWorkspaceRouteWithChildren,
  AuthRequiredIndexRoute: AuthRequiredIndexRoute,
}

const AuthRequiredRouteWithChildren = AuthRequiredRoute._addFileChildren(
  AuthRequiredRouteChildren,
)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRequiredRoute: AuthRequiredRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
